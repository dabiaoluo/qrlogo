#!/bin/sh

# ============================================================
# qr_init: Prepare rust for use with qrlogo
# 1) Initialize temporary directories
# 2) Install specific nightly toolchain
# 3) Get specific version of wasm-bindgen from git
# 4) Compile wasm-bindgen
# ============================================================
# Prerequisites:
#
# maybe need to install development version of openssl
# sudo dnf install openssl-devel
#
# install rust with https://sh.rustup.rs
# ============================================================

set -o nounset
set -o errexit

cd "$(dirname "$0")/.."


# ============================================================

printf "\n>>> >>> %s\n" "creating temporary directories"

for F in wasm-bindgen target; do
    if [ -L "$F" ]; then
        D="$(readlink "$F")"
	[ -d "$D" ] || mkdir -pv "$D"
    fi
done


# ============================================================

. cfg/upstream.sh


# ============================================================

printf "\n>>> >>> %s\n" "rustup install toolchain"
rustup install "${RUST_TOOLCHAIN}"
printf "\n>>> >>> %s\n" "rustup target add wasm32-unknown-unknown"
rustup target add wasm32-unknown-unknown --toolchain "${RUST_TOOLCHAIN}"


# ============================================================

printf "\n>>> >>> %s\n" "rustup install rustfmt-preview"
rustup component add rustfmt-preview --toolchain "${RUST_TOOLCHAIN}"


# ============================================================

printf "\n>>> >>> %s\n" "rustup install clippy-preview"
rustup component add clippy-preview --toolchain "${RUST_TOOLCHAIN}"


# ============================================================

printf "\n>>> >>> %s\n" "wasm-bindgen-cli"
if cargo +"${RUST_TOOLCHAIN}" install --list | grep -Eq "${WASM_BINDGEN_VERSION_STRING}" 2>/dev/null; then
	printf "\n>>> >>> %s\n" "wasm-bindgen-cli ${WASM_BINDGEN} already installed"
else
	cargo +"${RUST_TOOLCHAIN}" install --force ${WASM_BINDGEN_INSTALL} wasm-bindgen-cli
fi

printf "\n>>> >>> %s\n" "done"
